#!/bin/bash

# üöÄ EXEMPLO PR√ÅTICO: CONFIGURAR NOVA OFERTA
# Execute este script para configurar uma nova oferta

# ========================================
# 1Ô∏è‚É£ CONFIGURA√á√ïES
# ========================================

API_URL="https://sua-api-pix.com"  # ‚ö†Ô∏è ALTERE AQUI
OFERTA_NOME="Curso de Marketing Digital"
CHECKOUT_PAULO="https://checkout-paulo.com/curso-marketing"

echo "üöÄ Configurando nova oferta: $OFERTA_NOME"

# ========================================
# 2Ô∏è‚É£ CONFIGURAR CHECKOUT DO PAULO
# ========================================

echo "üìã Configurando checkout do Paulo..."

curl -X POST "$API_URL/checkout/update" \
  -H "Content-Type: application/json" \
  -d "{
    \"checkout\": \"$CHECKOUT_PAULO\",
    \"offer\": \"$OFERTA_NOME\"
  }" \
  -w "\nStatus: %{http_code}\n" \
  -s

if [ $? -eq 0 ]; then
  echo "‚úÖ Checkout configurado com sucesso!"
else
  echo "‚ùå Erro ao configurar checkout"
  exit 1
fi

# ========================================
# 3Ô∏è‚É£ OBTER ID DA OFERTA
# ========================================

echo "üîç Buscando ID da oferta..."

# Fazer uma venda de teste para criar a oferta
curl -X POST "$API_URL/gerarpix" \
  -H "Content-Type: application/json" \
  -d "{
    \"credentials\": {
      \"token\": \"teste_token_123\",
      \"name\": \"Cliente Teste\"
    },
    \"amount\": 1,
    \"product\": {
      \"title\": \"$OFERTA_NOME\"
    },
    \"customer\": {
      \"name\": \"Teste\",
      \"email\": \"teste@email.com\",
      \"phone\": \"11999999999\",
      \"document\": {
        \"type\": \"CPF\",
        \"number\": \"12345678901\"
      }
    }
  }" \
  -w "\nStatus: %{http_code}\n" \
  -s

echo "‚úÖ Oferta criada automaticamente!"

# ========================================
# 4Ô∏è‚É£ OBTER LISTA DE CLIENTES E OFERTAS
# ========================================

echo "üìä Listando clientes e ofertas..."

curl -X GET "$API_URL/clients" \
  -H "Content-Type: application/json" \
  -s | jq '.[] | {id: .id, name: .name, offers: [.offers[] | {id: .id, name: .name, useTax: .useTax}]}'

# ========================================
# 5Ô∏è‚É£ CONFIGURAR useTax (PARA RECEBER VENDAS)
# ========================================

echo "‚öôÔ∏è Configurando useTax para receber vendas..."

# Nota: Voc√™ precisa substituir OFERTA_ID pelo ID real da oferta
echo "‚ö†Ô∏è  IMPORTANTE: Substitua OFERTA_ID pelo ID real da oferta acima"

# Exemplo de como configurar useTax (descomente e ajuste o ID)
# curl -X POST "$API_URL/use-tax" \
#   -H "Content-Type: application/json" \
#   -d "{
#     \"offerId\": \"OFERTA_ID_AQUI\",
#     \"useTax\": true
#   }" \
#   -w "\nStatus: %{http_code}\n" \
#   -s

echo "‚úÖ useTax configurado! (Ajuste o ID da oferta acima)"

# ========================================
# 6Ô∏è‚É£ VERIFICAR CONFIGURA√á√ÉO
# ========================================

echo "üîç Verificando configura√ß√£o..."

# Verificar checkouts
echo "üìã Checkouts configurados:"
curl -X GET "$API_URL/checkout" \
  -H "Content-Type: application/json" \
  -s | jq '.[] | {offer: .offer, myCheckout: .myCheckout}'

# ========================================
# 7Ô∏è‚É£ TESTE DE INTEGRA√á√ÉO
# ========================================

echo "üß™ Testando integra√ß√£o..."

# Teste de checkout
echo "üîÑ Testando sistema de checkout..."
curl -X POST "$API_URL/checkout" \
  -H "Content-Type: application/json" \
  -d "{
    \"checkout\": \"https://meusite.com/checkout\",
    \"offer\": \"$OFERTA_NOME\"
  }" \
  -w "\nStatus: %{http_code}\n" \
  -s

# ========================================
# 8Ô∏è‚É£ INSTRU√á√ïES PARA O CLIENTE
# ========================================

echo "üìã INSTRU√á√ïES PARA O CLIENTE:"
echo ""
echo "1. Configure as credenciais do gateway do cliente:"
echo "   - Token: Secret key do gateway do cliente"
echo "   - Nome: Nome do cliente"
echo ""
echo "2. Integre com sua API:"
echo "   - URL: $API_URL/gerarpix"
echo "   - M√©todo: POST"
echo "   - Headers: Content-Type: application/json"
echo ""
echo "3. Exemplo de requisi√ß√£o:"
echo "   {"
echo "     \"credentials\": {"
echo "       \"token\": \"sk_cliente_123\","
echo "       \"name\": \"Nome do Cliente\""
echo "     },"
echo "     \"amount\": 297,"
echo "     \"product\": {"
echo "       \"title\": \"$OFERTA_NOME\""
echo "     },"
echo "     \"customer\": {"
echo "       \"name\": \"Jo√£o Silva\","
echo "       \"email\": \"joao@email.com\","
echo "       \"phone\": \"11999999999\","
echo "       \"document\": {"
echo "         \"type\": \"CPF\","
echo "         \"number\": \"12345678901\""
echo "       }"
echo "     }"
echo "   }"
echo ""
echo "4. Sistema 7x3:"
echo "   - 70% das vendas v√£o para o cliente"
echo "   - 30% das vendas v√£o para o Paulo (BlackCat)"
echo "   - useTax = true para receber vendas"
echo ""

# ========================================
# 9Ô∏è‚É£ MONITORAMENTO
# ========================================

echo "üìä MONITORAMENTO:"
echo ""
echo "1. Verificar vendas:"
echo "   curl -X GET $API_URL/sales"
echo ""
echo "2. Verificar clientes:"
echo "   curl -X GET $API_URL/clients"
echo ""
echo "3. Verificar checkouts:"
echo "   curl -X GET $API_URL/checkout"
echo ""
echo "4. Logs da API:"
echo "   tail -f logs/api.log"
echo ""

echo "üéâ Configura√ß√£o da oferta '$OFERTA_NOME' conclu√≠da!"
echo "üöÄ Agora o cliente pode integrar e come√ßar a vender!"


